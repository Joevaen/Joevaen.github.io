<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 3.自定义数据管道</title>
    <link>https://Joevaen.github.io/docs/languages/dart/</link>
    <description>Recent content in 3.自定义数据管道 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/dart/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 数据管道的设计</title>
      <link>https://Joevaen.github.io/docs/languages/dart/design_pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/dart/design_pipeline/</guid>
      <description>
        
        
        &lt;p&gt;按照惯例，我们使用&lt;code&gt;Dataset&lt;/code&gt;和&lt;code&gt;DataLoader&lt;/code&gt;来进行多线程的数据加载。&lt;code&gt;Dataset&lt;/code&gt;返回的是一个包含对应模型前向参数的数据项目的字典。由于在目标检测中，数据的形状可能不一致（图像的形状、gt的形状等等），我们在MMCV中介绍了一种新的数据类型 &lt;code&gt;DataContainer&lt;/code&gt;来帮助收集和分配不同大小的数据。&lt;a href=&#34;https://github.com/open-mmlab/mmcv/blob/master/mmcv/parallel/data_container.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;来获取更多的细节。&lt;/p&gt;
&lt;p&gt;数据准备管道和数据集是分解开的。通常，数据集定义了怎样去处理标签，而数据管道定义了如何准备一个数据字典的所有步骤。
管道包含了一系列的操作，每一次操作都把字典作为一个输出，同时为下一次的变换输出一个字典。&lt;/p&gt;
&lt;p&gt;我们把这个经典管道用下图的方式进行了体现，蓝色块是管道操作。随着管道的延伸，每一个操作都能加入新的键（绿色标记）到结果字典中，或者更新已经存在的键（橙色标记）。


&lt;figure class=&#34;text-center&#34;&gt;
  &lt;img class=&#34;modal-trigger&#34; src=&#34;https://github.com/open-mmlab/mmdetection/blob/master/resources/data_pipeline.png?raw=true&#34; alt=&#34;data&#34; id=&#34;data_pipeline?raw=true&#34; data-toggle=&#34;modal&#34; data-target=&#34;#modal-data_pipeline?raw=true&#34;/&gt;

  &lt;div class=&#34;modal&#34; id=&#34;modal-data_pipeline?raw=true&#34;&gt;
    &lt;div class=&#34;modal-dialog modal-lg modal-dialog-centered&#34;&gt;
      &lt;div class=&#34;modal-body&#34;&gt;
        &lt;img src=&#34;https://github.com/open-mmlab/mmdetection/blob/master/resources/data_pipeline.png?raw=true&#34; alt=&#34;data&#34;/&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;该操作被分类为数据加载，预处理，格式化和测试时间增强。&lt;/p&gt;
&lt;p&gt;以下是用于Faster R-CNN的管道示例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;img_norm_cfg &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    mean&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;123.675&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;116.28&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;103.53&lt;/span&gt;], std&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;58.395&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;57.12&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;57.375&lt;/span&gt;], to_rgb&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True)
train_pipeline &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; [
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadImageFromFile&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadAnnotations&amp;#39;&lt;/span&gt;, with_bbox&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Resize&amp;#39;&lt;/span&gt;, img_scale&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#f60&#34;&gt;1333&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;800&lt;/span&gt;), keep_ratio&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;RandomFlip&amp;#39;&lt;/span&gt;, flip_ratio&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.5&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Normalize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;img_norm_cfg),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Pad&amp;#39;&lt;/span&gt;, size_divisor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;32&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;DefaultFormatBundle&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Collect&amp;#39;&lt;/span&gt;, keys&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;gt_bboxes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;gt_labels&amp;#39;&lt;/span&gt;]),
]
test_pipeline &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; [
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadImageFromFile&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;MultiScaleFlipAug&amp;#39;&lt;/span&gt;,
        img_scale&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#f60&#34;&gt;1333&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;800&lt;/span&gt;),
        flip&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;False,
        transforms&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Resize&amp;#39;&lt;/span&gt;, keep_ratio&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;RandomFlip&amp;#39;&lt;/span&gt;),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Normalize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;img_norm_cfg),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Pad&amp;#39;&lt;/span&gt;, size_divisor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;32&lt;/span&gt;),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ImageToTensor&amp;#39;&lt;/span&gt;, keys&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;]),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Collect&amp;#39;&lt;/span&gt;, keys&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;]),
        ])
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于每个操作，我们列出了add/update/remove的相关的字典字段。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 扩展和使用定制管道</title>
      <link>https://Joevaen.github.io/docs/languages/dart/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/dart/quickstart/</guid>
      <description>
        
        
        &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在任意文件中写一个新的pipeline, 比如： &lt;code&gt;my_pipeline.py&lt;/code&gt;. 它将一个字典作为输入，同时输出一个字典。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;mmdet.datasets&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; PIPELINES

&lt;span style=&#34;color:#99f&#34;&gt;@PIPELINES.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;MyTransform&lt;/span&gt;:

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __call__(self, results):
        results[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;dummy&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; results
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导入新的类。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.my_pipeline&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; MyTransform
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在配置文件中使用它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;img_norm_cfg &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    mean&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;123.675&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;116.28&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;103.53&lt;/span&gt;], std&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;58.395&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;57.12&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;57.375&lt;/span&gt;], to_rgb&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True)
train_pipeline &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; [
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadImageFromFile&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadAnnotations&amp;#39;&lt;/span&gt;, with_bbox&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Resize&amp;#39;&lt;/span&gt;, img_scale&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#f60&#34;&gt;1333&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;800&lt;/span&gt;), keep_ratio&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;RandomFlip&amp;#39;&lt;/span&gt;, flip_ratio&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.5&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Normalize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;img_norm_cfg),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Pad&amp;#39;&lt;/span&gt;, size_divisor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;32&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;MyTransform&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;DefaultFormatBundle&amp;#39;&lt;/span&gt;),
    &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Collect&amp;#39;&lt;/span&gt;, keys&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;gt_bboxes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;gt_labels&amp;#39;&lt;/span&gt;]),
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
