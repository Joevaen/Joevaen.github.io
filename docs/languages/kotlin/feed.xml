<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joevaen – 6.自定义loss</title>
    <link>https://Joevaen.github.io/docs/languages/kotlin/</link>
    <description>Recent content in 6.自定义loss on Joevaen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/kotlin/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 微调损失</title>
      <link>https://Joevaen.github.io/docs/languages/kotlin/tweak/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/kotlin/tweak/</guid>
      <description>
        
        
        &lt;p&gt;微调损失更多和上面所述的1、3、4步有关，最多的修改应该是在配置文件中。
Here we take &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/models/losses/focal_loss.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Focal Loss (FL)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; as an example.现在我们拿&lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/models/losses/focal_loss.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Focal Loss (FL)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;举个例子。
以下代码是Focal Loss的构造方法和配置，实际上是一对一的对应关系。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#99f&#34;&gt;@LOSSES.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;FocalLoss&lt;/span&gt;(nn&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;Module):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self,
                 use_sigmoid&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True,
                 gamma&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2.0&lt;/span&gt;,
                 alpha&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.25&lt;/span&gt;,
                 reduction&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;,
                 loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.0&lt;/span&gt;):
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;loss_cls&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;FocalLoss&amp;#39;&lt;/span&gt;,
    use_sigmoid&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True,
    gamma&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2.0&lt;/span&gt;,
    alpha&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.25&lt;/span&gt;,
    loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 计算损失的pipeline</title>
      <link>https://Joevaen.github.io/docs/languages/kotlin/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/kotlin/pipeline/</guid>
      <description>
        
        
        &lt;p&gt;给定输入预测和目标，以及权重，损失将输入张量映射到最终损失标量。 映射可以分为四个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过损失函数得到&lt;strong&gt;element-wise&lt;/strong&gt; 或者 sample-wise损失。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用权重张量&lt;strong&gt;element-wisely&lt;/strong&gt;给损失加权。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将损失张量减少至 &lt;strong&gt;scalar&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用&lt;strong&gt;scalar&lt;/strong&gt;给损失加权。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 加权损失（步骤2）</title>
      <link>https://Joevaen.github.io/docs/languages/kotlin/weighting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/kotlin/weighting/</guid>
      <description>
        
        
        &lt;p&gt;加权损失意味着重新element-wisely对损失进行加权。 更具体地说，我们将损失张量乘以具有相同形状的权重张量。 结果，损失的不同entries就会以不同的方式进行缩放，因此叫做element-wisely。
损失的权重和模型的不同高度相关，但是总体来说有两种损失权重，  &lt;code&gt;label_weights&lt;/code&gt; 用于分类权重， &lt;code&gt;bbox_weights&lt;/code&gt; 用于bbox回归。 你能在对应的head中的&lt;code&gt;get_target&lt;/code&gt;方法中找到。现在用&lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/models/dense_heads/atss_head.py#L530&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ATSSHead&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;举个例子, 继承了 &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/models/dense_heads/anchor_head.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AnchorHead&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;而且重写 &lt;code&gt;get_targets&lt;/code&gt; 的方法。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class ATSSHead(AnchorHead):

    ...

    def get_targets(self,
                    anchor_list,
                    valid_flag_list,
                    gt_bboxes_list,
                    img_metas,
                    gt_bboxes_ignore_list=None,
                    gt_labels_list=None,
                    label_channels=1,
                    unmap_outputs=True):
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
