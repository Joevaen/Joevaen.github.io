<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 开发新组件</title>
    <link>https://Joevaen.github.io/docs/languages/go/develop_new_components/</link>
    <description>Recent content in 开发新组件 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/go/develop_new_components/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 添加新的backbone</title>
      <link>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_backbone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_backbone/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: 添加新的neck</title>
      <link>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_neck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_neck/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: 添加新的head</title>
      <link>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_head/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_head/</guid>
      <description>
        
        
        &lt;p&gt;下面我们将&lt;a href=&#34;https://arxiv.org/abs/1904.06493&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Double Head R-CNN&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;为例，以演示如何开发一个新的head。
首先，要在&lt;code&gt;mmdet/models/roi_heads/bbox_heads/double_bbox_head.py&lt;/code&gt;中添加一个新的bbox head。Double Head R-CNN为目标检测提出了一个新的bbox head。要实现这样一个head，首先我们要想下面这样实现具有三个功能的模块：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;mmdet.models.builder&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; HEADS
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.bbox_head&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; BBoxHead

&lt;span style=&#34;color:#99f&#34;&gt;@HEADS.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;DoubleConvFCBBoxHead&lt;/span&gt;(BBoxHead):
    &lt;span style=&#34;color:#c30&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Bbox head used in Double-Head R-CNN
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                                      /-&amp;gt; cls
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                  /-&amp;gt; shared convs -&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                                      \-&amp;gt; reg
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    roi features
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                                      /-&amp;gt; cls
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                  \-&amp;gt; shared fc    -&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;                                      \-&amp;gt; reg
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# noqa: W605&lt;/span&gt;

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self,
                 num_convs&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;,
                 num_fcs&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;,
                 conv_out_channels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt;,
                 fc_out_channels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt;,
                 conv_cfg&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None,
                 norm_cfg&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;BN&amp;#39;&lt;/span&gt;),
                 &lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;kwargs):
        kwargs&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;setdefault(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;with_avg_pool&amp;#39;&lt;/span&gt;, True)
        &lt;span style=&#34;color:#366&#34;&gt;super&lt;/span&gt;(DoubleConvFCBBoxHead, self)&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;__init__(&lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;kwargs)


    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;forward&lt;/span&gt;(self, x_cls, x_reg):

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，如果有必要的话实现一个新的ROI Head。我们计划从&lt;code&gt;StandardRoIHead&lt;/code&gt;继承一个新的&lt;code&gt;DoubleHeadRoIHead&lt;/code&gt;。我们可以看出&lt;code&gt;StandardRoIHead&lt;/code&gt; 已经实现了下面的功能：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;torch&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;mmdet.core&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; bbox2result, bbox2roi, build_assigner, build_sampler
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;..builder&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; HEADS, build_head, build_roi_extractor
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.base_roi_head&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; BaseRoIHead
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.test_mixins&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; BBoxTestMixin, MaskTestMixin


&lt;span style=&#34;color:#99f&#34;&gt;@HEADS.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;StandardRoIHead&lt;/span&gt;(BaseRoIHead, BBoxTestMixin, MaskTestMixin):
    &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Simplest base roi head including one bbox head and one mask head.
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;init_assigner_sampler&lt;/span&gt;(self):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;init_bbox_head&lt;/span&gt;(self, bbox_roi_extractor, bbox_head):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;init_mask_head&lt;/span&gt;(self, mask_roi_extractor, mask_head):


    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;forward_dummy&lt;/span&gt;(self, x, proposals):


    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;forward_train&lt;/span&gt;(self,
                      x,
                      img_metas,
                      proposal_list,
                      gt_bboxes,
                      gt_labels,
                      gt_bboxes_ignore&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None,
                      gt_masks&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;_bbox_forward&lt;/span&gt;(self, x, rois):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;_bbox_forward_train&lt;/span&gt;(self, x, sampling_results, gt_bboxes, gt_labels,
                            img_metas):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;_mask_forward_train&lt;/span&gt;(self, x, sampling_results, bbox_feats, gt_masks,
                            img_metas):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;_mask_forward&lt;/span&gt;(self, x, rois&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None, pos_inds&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None, bbox_feats&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None):


    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;simple_test&lt;/span&gt;(self,
                    x,
                    proposal_list,
                    img_metas,
                    proposals&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None,
                    rescale&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;False):
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Test without augmentation.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对Double Head的修改主要实在bbox_forward的逻辑上，它从 &lt;code&gt;StandardRoIHead&lt;/code&gt;继承了其他的逻辑。
在&lt;code&gt;mmdet/models/roi_heads/double_roi_head.py&lt;/code&gt;中，我们通过下面方法实现了一个新的ROI Head：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;..builder&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; HEADS
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.standard_roi_head&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; StandardRoIHead


&lt;span style=&#34;color:#99f&#34;&gt;@HEADS.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;DoubleHeadRoIHead&lt;/span&gt;(StandardRoIHead):
    &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&amp;#34;RoI head for Double Head RCNN
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    https://arxiv.org/abs/1904.06493
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, reg_roi_scale_factor, &lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;kwargs):
        &lt;span style=&#34;color:#366&#34;&gt;super&lt;/span&gt;(DoubleHeadRoIHead, self)&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;__init__(&lt;span style=&#34;color:#555&#34;&gt;**&lt;/span&gt;kwargs)
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;reg_roi_scale_factor &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reg_roi_scale_factor

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;_bbox_forward&lt;/span&gt;(self, x, rois):
        bbox_cls_feats &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;bbox_roi_extractor(
            x[:self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;bbox_roi_extractor&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;num_inputs], rois)
        bbox_reg_feats &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;bbox_roi_extractor(
            x[:self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;bbox_roi_extractor&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;num_inputs],
            rois,
            roi_scale_factor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;reg_roi_scale_factor)
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;with_shared_head:
            bbox_cls_feats &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;shared_head(bbox_cls_feats)
            bbox_reg_feats &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;shared_head(bbox_reg_feats)
        cls_score, bbox_pred &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;bbox_head(bbox_cls_feats, bbox_reg_feats)

        bbox_results &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
            cls_score&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;cls_score,
            bbox_pred&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;bbox_pred,
            bbox_feats&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;bbox_cls_feats)
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; bbox_results
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，把这个模块加入到&lt;code&gt;mmdet/models/bbox_heads/__init__.py&lt;/code&gt; 和 &lt;code&gt;mmdet/models/roi_heads/__init__.py&lt;/code&gt;中，使得对应的注册表能够找到并加载它。&lt;/p&gt;
&lt;p&gt;作为备用, 使用者可以添加如下代码到配置文件实现与上述方法相同的目的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;custom_imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mmdet.models.roi_heads.double_roi_head&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mmdet.models.bbox_heads.double_bbox_head&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Double Head R-CNN的配置文件如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;_base_ &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;../faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py&amp;#39;&lt;/span&gt;
model &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    roi_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;DoubleHeadRoIHead&amp;#39;&lt;/span&gt;,
        reg_roi_scale_factor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.3&lt;/span&gt;,
        bbox_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
            _delete_&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;True,
            &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;DoubleConvFCBBoxHead&amp;#39;&lt;/span&gt;,
            num_convs&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;,
            num_fcs&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;,
            in_channels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;256&lt;/span&gt;,
            conv_out_channels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt;,
            fc_out_channels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1024&lt;/span&gt;,
            roi_feat_size&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;7&lt;/span&gt;,
            num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;80&lt;/span&gt;,
            bbox_coder&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;DeltaXYWHBBoxCoder&amp;#39;&lt;/span&gt;,
                target_means&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;0.&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.&lt;/span&gt;],
                target_stds&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.2&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;0.2&lt;/span&gt;]),
            reg_class_agnostic&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;False,
            loss_cls&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;CrossEntropyLoss&amp;#39;&lt;/span&gt;, use_sigmoid&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;False, loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2.0&lt;/span&gt;),
            loss_bbox&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;SmoothL1Loss&amp;#39;&lt;/span&gt;, beta&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.0&lt;/span&gt;, loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2.0&lt;/span&gt;))))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since MMDetection 2.0, the config system supports to inherit configs such that the users can focus on the modification.
The Double Head R-CNN mainly uses a new DoubleHeadRoIHead and a new
&lt;code&gt;DoubleConvFCBBoxHead&lt;/code&gt;, the arguments are set according to the &lt;code&gt;__init__&lt;/code&gt; function of each module.
在MMDetection2.0之后，配置文件系统支持继承，使得使用者可以专注于修改。
Double Head R-CNN主要使用了一个新的 &lt;code&gt;DoubleHeadRoIHead&lt;/code&gt; 和一个新的 &lt;code&gt;DoubleConvFCBBoxHead&lt;/code&gt;，每个模块的&lt;code&gt;__init__&lt;/code&gt;函数用来设置参数。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 添加新的loss</title>
      <link>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_loss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/go/develop_new_components/add_loss/</guid>
      <description>
        
        
        &lt;p&gt;假设你想添加一个叫做&lt;code&gt;MyLoss&lt;/code&gt;的损失，用于bbox的回归。为了添加一个新的损失函数，使用者需要在 &lt;code&gt;mmdet/models/losses/my_loss.py&lt;/code&gt; 中实现它。
装饰器&lt;code&gt;weighted_loss&lt;/code&gt;能使得损失对每个元素加权。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;torch&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;torch.nn&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;nn&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;..builder&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; LOSSES
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.utils&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; weighted_loss

&lt;span style=&#34;color:#99f&#34;&gt;@weighted_loss&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;my_loss&lt;/span&gt;(pred, target):
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;assert&lt;/span&gt; pred&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;size() &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; target&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;size() &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;and&lt;/span&gt; target&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;numel() &lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;
    loss &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; torch&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;abs(pred &lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt; target)
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; loss

&lt;span style=&#34;color:#99f&#34;&gt;@LOSSES.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;MyLoss&lt;/span&gt;(nn&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;Module):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, reduction&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;, loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.0&lt;/span&gt;):
        &lt;span style=&#34;color:#366&#34;&gt;super&lt;/span&gt;(MyLoss, self)&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;__init__()
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;reduction &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reduction
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;loss_weight &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; loss_weight

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;forward&lt;/span&gt;(self,
                pred,
                target,
                weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None,
                avg_factor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None,
                reduction_override&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;None):
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;assert&lt;/span&gt; reduction_override &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; (None, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;)
        reduction &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; (
            reduction_override &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; reduction_override &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;reduction)
        loss_bbox &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;loss_weight &lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt; my_loss(
            pred, target, weight, reduction&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;reduction, avg_factor&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;avg_factor)
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; loss_bbox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then the users need to add it in the &lt;code&gt;mmdet/models/losses/__init__.py&lt;/code&gt;.
之后使用者需要把它加入到 &lt;code&gt;mmdet/models/losses/__init__.py&lt;/code&gt; 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.my_loss&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; MyLoss, my_loss

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;作为备选, 也可以添加这个代码到配置文件实现相同的目的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;custom_imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mmdet.models.losses.my_loss&amp;#39;&lt;/span&gt;])

&lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;为了使用它，需要修改&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`loss_xxx`&lt;/span&gt;&lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;字段，由于&lt;/span&gt;MyLoss是用来回归的&lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;，你需要在&lt;/span&gt;head中修改 &lt;span style=&#34;color:#c30&#34;&gt;`loss_bbox`&lt;/span&gt;&lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;字段。&lt;/span&gt; 

&lt;span style=&#34;color:#c30&#34;&gt;``&lt;/span&gt;&lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;`&lt;/span&gt;python
loss_bbox&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;MyLoss&amp;#39;&lt;/span&gt;, loss_weight&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1.0&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
