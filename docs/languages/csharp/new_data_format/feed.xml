<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 对新数据格式的支持</title>
    <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/</link>
    <description>Recent content in 对新数据格式的支持 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/csharp/new_data_format/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 将新的数据格式重新组织到现有格式</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/</guid>
      <description>
        
        
        &lt;p&gt;最简单的方法是将数据集转换为现有的数据集格式（Coco或Pascal VOC）。
COCO格式的标签JSON文件具有以下必需键：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;: [
    {
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;file_name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;COCO_val2014_000000001268.jpg&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;height&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;427&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1268&lt;/span&gt;
    },
    &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
],

&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;annotations&amp;#39;&lt;/span&gt;: [
    {
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;segmentation&amp;#39;&lt;/span&gt;: [[&lt;span style=&#34;color:#f60&#34;&gt;192.81&lt;/span&gt;,
            &lt;span style=&#34;color:#f60&#34;&gt;247.09&lt;/span&gt;,
            &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
            &lt;span style=&#34;color:#f60&#34;&gt;219.03&lt;/span&gt;,
            &lt;span style=&#34;color:#f60&#34;&gt;249.06&lt;/span&gt;]],  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# if you have mask labels&lt;/span&gt;
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;area&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1035.749&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;iscrowd&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1268&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bbox&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#f60&#34;&gt;192.81&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;224.8&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;74.73&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;33.43&lt;/span&gt;],
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;category_id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;42986&lt;/span&gt;
    },
    &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
],

&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;: [
    {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;car&amp;#39;&lt;/span&gt;},
 ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JSON文件中有三个必要的键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;images&lt;/code&gt;: 包含图像信息的列表，比如： &lt;code&gt;file_name&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, 和 &lt;code&gt;id&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotations&lt;/code&gt;: 包含每个实例标签的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;categories&lt;/code&gt;: 包含类别名称和其ID列表。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在数据预处理后，用户有两个步骤训练具有现有格式的自定义新数据集 (e.g. COCO format):&lt;/p&gt;
&lt;p&gt;1.修改使用自定义数据集的配置文件。
2.检查自定义数据集的注释。&lt;/p&gt;
&lt;p&gt;在这里，我们举例说明了一个示例，以显示上述两个步骤，它使用带有Coco格式的5个类的自定义数据集来训练现有的级联MaskRCNN R50 FPN检测器。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 重新组织新数据格式到中间格式</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_middle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_middle/</guid>
      <description>
        
        
        &lt;p&gt;如果您不想将标签格式转换为Coco或Pascal格式也可以。 实际上，我们定义了一个简单的标签格式，并处理所有现有数据集以与其兼容，无论是在线还是脱机。&lt;/p&gt;
&lt;p&gt;数据集的标签是包含多个字典的列表，每个字典对应一个图像。
有3个字段 &lt;code&gt;filename&lt;/code&gt; (相关路径), &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; 用于测试,
一个额外的字段 &lt;code&gt;ann&lt;/code&gt; 用于训练。 &lt;code&gt;ann&lt;/code&gt; 也是一个至少包含两个字段的字典:
&lt;code&gt;bboxes&lt;/code&gt; 和 &lt;code&gt;labels&lt;/code&gt;, 这两个都是numpy的数组。一些数据集会提供 crowd/difficult/ignored bboxes 这样的标签, 我们使用 &lt;code&gt;bboxes_ignore&lt;/code&gt; 和 &lt;code&gt;labels_ignore&lt;/code&gt;来覆盖他们。&lt;/p&gt;
&lt;p&gt;下面是一个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
[
    {
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;filename&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;a.jpg&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1280&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;height&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;720&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ann&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bboxes&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;ndarray, float32&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; (n, &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;),
            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;ndarray, int64&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; (n, ),
            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bboxes_ignore&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;ndarray, float32&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; (k, &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;),
            &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;labels_ignore&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#555&#34;&gt;&amp;lt;&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;ndarray, int64&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; (k, ) (optional field)
        }
    },
    &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有两种方法可以使用自定义数据集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在线转化&lt;/p&gt;
&lt;p&gt;你可以写一个继承 &lt;code&gt;CustomDataset&lt;/code&gt; 的类, 然后覆写下面两个方法：
&lt;code&gt;load_annotations(self, ann_file)&lt;/code&gt; 和 &lt;code&gt;get_ann_info(self, idx)&lt;/code&gt;,
像下面这两种一样： &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/datasets/coco.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CocoDataset&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/datasets/voc.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VOCDataset&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脱机转换&lt;/p&gt;
&lt;p&gt;你可以将标签转换成以上你期望转换成的格式并且保存成一个pkl文件或者json文件, 仿照这个例子： &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/tools/dataset_converters/pascal_voc.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pascal_voc.py&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;.
然后可以很容易的使用&lt;code&gt;CustomDataset&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 自定义数据集的示例</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/example/</guid>
      <description>
        
        
        &lt;p&gt;假设标签是在txt文件中的如下格式，保存在.txt文件中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#
000001.jpg
1280 720
2
10 20 40 60 1
20 40 50 60 2
#
000002.jpg
1280 720
3
50 20 40 60 2
20 40 30 45 2
30 40 50 60 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们创建了 &lt;code&gt;mmdet/datasets/my_dataset.py&lt;/code&gt; 去加载数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;mmcv&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;numpy&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;np&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.builder&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; DATASETS
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.custom&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; CustomDataset


&lt;span style=&#34;color:#99f&#34;&gt;@DATASETS.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;MyDataset&lt;/span&gt;(CustomDataset):

    CLASSES &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bicycle&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;car&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;motorcycle&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;load_annotations&lt;/span&gt;(self, ann_file):
        ann_list &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; mmcv&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;list_from_file(ann_file)

        data_infos &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; []
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; i, ann_line &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;enumerate&lt;/span&gt;(ann_list):
            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; ann_line &lt;span style=&#34;color:#555&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;:
                &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;continue&lt;/span&gt;

            img_shape &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; ann_list[i &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)
            width &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;int&lt;/span&gt;(img_shape[&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;])
            height &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;int&lt;/span&gt;(img_shape[&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;])
            bbox_number &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;int&lt;/span&gt;(ann_list[i &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt;])

            anns &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; ann_line&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)
            bboxes &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; []
            labels &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; []
            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; anns &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; ann_list[i &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;:i &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; bbox_number]:
                bboxes&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#366&#34;&gt;float&lt;/span&gt;(ann) &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; ann &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; anns[:&lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;]])
                labels&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#366&#34;&gt;int&lt;/span&gt;(anns[&lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;]))

            data_infos&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;append(
                &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                    filename&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;ann_list[i &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;],
                    width&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;width,
                    height&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;height,
                    ann&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                        bboxes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;array(bboxes)&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;float32),
                        labels&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;array(labels)&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;int64))
                ))

        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; data_infos

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;get_ann_info&lt;/span&gt;(self, idx):
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;data_infos[idx][&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ann&amp;#39;&lt;/span&gt;]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在配置文件中，通过修改以下配置文件去使用 &lt;code&gt;MyDataset&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset_A_train &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;MyDataset&amp;#39;&lt;/span&gt;,
    ann_file &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;image_list.txt&amp;#39;&lt;/span&gt;,
    pipeline&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;train_pipeline
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
