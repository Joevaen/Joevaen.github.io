<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 将新的数据格式重新组织到现有格式</title>
    <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/</link>
    <description>Recent content in 将新的数据格式重新组织到现有格式 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 1.修改使用自定义数据集的配置文件</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/modify/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/modify/</guid>
      <description>
        
        
        &lt;p&gt;修改配置文件包括两个方面:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt; 字段。 特别指出, 你需要明确地在 &lt;code&gt;data.train&lt;/code&gt;, &lt;code&gt;data.val&lt;/code&gt; 和 &lt;code&gt;data.test&lt;/code&gt; 加入&lt;code&gt;classes&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;部分的&lt;code&gt;num_classes&lt;/code&gt;字段。 从默认值（例如，Coco中的默认值80）明确地写下所有&lt;code&gt;num_classes&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 &lt;code&gt;configs/my_custom_config.py&lt;/code&gt; 中:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 新配置继承了基础配置以突出显示必要的修改&lt;/span&gt;
_base_ &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;./cascade_mask_rcnn_r50_fpn_1x_coco.py&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 1. 数据集设置&lt;/span&gt;
dataset_type &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;CocoDataset&amp;#39;&lt;/span&gt;
classes &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;)
data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    samples_per_gpu&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;,
    workers_per_gpu&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;,
    train&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;dataset_type,
        &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确在classes字段中加入类别名&lt;/span&gt;
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/train/annotation_data&amp;#39;&lt;/span&gt;,
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/train/image_data&amp;#39;&lt;/span&gt;),
    val&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;dataset_type,
        &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确在classes字段中加入类别名&lt;/span&gt;
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/val/annotation_data&amp;#39;&lt;/span&gt;,
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/val/image_data&amp;#39;&lt;/span&gt;),
    test&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;dataset_type,
        &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确在classes字段中加入类别名&lt;/span&gt;
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/test/annotation_data&amp;#39;&lt;/span&gt;,
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/your/test/image_data&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 2. 模型设置&lt;/span&gt;

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确地覆写`num_classes`字段。&lt;/span&gt;
model &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    roi_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        bbox_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Shared2FCBBoxHead&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确地覆写`num_classes`字段。&lt;/span&gt;
                num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Shared2FCBBoxHead&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确地覆写`num_classes`字段。&lt;/span&gt;
                num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;),
            &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
                &lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Shared2FCBBoxHead&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确地覆写`num_classes`字段。&lt;/span&gt;
                num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;)],
    &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# 明确地覆写`num_classes`字段。&lt;/span&gt;
    mask_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 2.检查自定义数据集的标签</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/check/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/reorganize_exist/check/</guid>
      <description>
        
        
        &lt;p&gt;假设您的自定义数据集是Coco格式，请确保在自定义数据集中有正确的标签：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标签中 &lt;code&gt;categories&lt;/code&gt; 字段的长度应当等于你的配置文件中 &lt;code&gt;classes&lt;/code&gt; 字段的元组长度, 也就是类别的数目 (这个例子中是5)。&lt;/li&gt;
&lt;li&gt;你配置文件中的&lt;code&gt;classes&lt;/code&gt;字段应当与标签中的&lt;code&gt;catagories&lt;/code&gt;中的&lt;code&gt;name&lt;/code&gt;字段具有相同的元素和顺序。MMDetection 会自动将&lt;code&gt;categories&lt;/code&gt;中的不连续&lt;code&gt;id&lt;/code&gt;自动映射到连续的标签索引，因此配置文件的&lt;code&gt;categories&lt;/code&gt;字段中的&lt;code&gt;name&lt;/code&gt;的字符串顺序会影响标签索引的顺序。同时，在预测bbox的可视化过程中，配置文件中的&lt;code&gt;classes&lt;/code&gt;顺序会影响到标签文本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;annotations&lt;/code&gt;字段中的&lt;code&gt;category_id&lt;/code&gt;应当是合法的，比如：&lt;code&gt;category_id&lt;/code&gt;的所有值都应当属于&lt;code&gt;categories&lt;/code&gt;的&lt;code&gt;id&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是一个标签的合法的例子:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;annotations&amp;#39;&lt;/span&gt;: [
    {
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;segmentation&amp;#39;&lt;/span&gt;: [[&lt;span style=&#34;color:#f60&#34;&gt;192.81&lt;/span&gt;,
            &lt;span style=&#34;color:#f60&#34;&gt;247.09&lt;/span&gt;,
            &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
            &lt;span style=&#34;color:#f60&#34;&gt;219.03&lt;/span&gt;,
            &lt;span style=&#34;color:#f60&#34;&gt;249.06&lt;/span&gt;]],  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# if you have mask labels&lt;/span&gt;
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;area&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1035.749&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;iscrowd&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1268&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bbox&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#f60&#34;&gt;192.81&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;224.8&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;74.73&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;33.43&lt;/span&gt;],
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;category_id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;,
        &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;42986&lt;/span&gt;
    },
    &lt;span style=&#34;color:#555&#34;&gt;...&lt;/span&gt;
],

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# MMDetection自动将非连续的id匹配到连续的标签索引。&lt;/span&gt;
&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;: [
    {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;}, {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;}, {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;}, {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;}, {&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f60&#34;&gt;17&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;},
 ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们使用这种方式来支持CityScapes DataSet. 脚本在这儿&lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/tools/dataset_converters/cityscapes.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cityscapes.py&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;。同时我们也提供finetuning &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/configs/cityscapes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;configs&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于实例分割数据集, &lt;strong&gt;MMDetection现在仅支持评估COCO数据集的掩码AP&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;建议在训练前脱机转换数据，因此您仍然可以使用COCO数据集，并只需要修改标签的路径和训练类。&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
