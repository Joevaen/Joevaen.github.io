<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joevaen – 2.定制数据集</title>
    <link>https://Joevaen.github.io/docs/languages/csharp/</link>
    <description>Recent content in 2.定制数据集 on Joevaen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/csharp/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 对新数据格式的支持</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/new_data_format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/new_data_format/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: 通过数据集封装器自定义数据集</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/dataset_wraper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/dataset_wraper/</guid>
      <description>
        
        
        &lt;p&gt;MMDetection还支持许多数据集封装器来混合数据集或修改数据集分布以进行训练。
目前它支持以下三个数据集包装，如下所示：:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RepeatDataset&lt;/code&gt;: 简单重复整个数据集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ClassBalancedDataset&lt;/code&gt;: 以类平衡方式重复数据集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ConcatDataset&lt;/code&gt;: 拼接数据集。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 修改数据集的类别</title>
      <link>https://Joevaen.github.io/docs/languages/csharp/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/csharp/quickstart/</guid>
      <description>
        
        
        &lt;p&gt;使用现有数据集类型，我们可以修改它们的类名，以训练标签的子集。 例如，如果要只训练当前数据集的三分类，则可以修改数据集的类。数据集将自动过滤掉其他类的groundtruth。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;classes &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;person&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;bicycle&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;car&amp;#39;&lt;/span&gt;)
data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    train&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes),
    val&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes),
    test&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MMDetection v2.0还支持从文件中读取类，该文件在真实应用程序中很常见。 例如，假设 &lt;code&gt;classes.txt&lt;/code&gt; 包含以下类的名称。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;person
bicycle
car
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用户可以将类设置为文件路径，数据集将其加载并自动将其转换为列表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;classes &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;path/to/classes.txt&amp;#39;&lt;/span&gt;
data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    train&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes),
    val&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes),
    test&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在MMDetection v2.5.0之前，如果自己设置了类别，数据集就会自动过滤掉空的GT图像，也就是把不包含设置类的图像去除掉，同时也无法通过配置文件将这种方式关闭。这当然是个不希望看到的行为，因为加入我没有设置类别，那么数据集仅仅会在&lt;code&gt;filter_empty_gt=True&lt;/code&gt; 和 &lt;code&gt;test_mode=False&lt;/code&gt;时过滤掉空的GT。在MMDetection v2.5之后，我们将图像过滤的过程和类别修改过程进行了分离，也就说，只有当&lt;code&gt;filter_empty_gt=True&lt;/code&gt; 和 &lt;code&gt;test_mode=False&lt;/code&gt;时才会过滤掉空的GT，而不管有没设置类别。因此，设置类别仅仅影响用于训练的标签，使用者能自己选择是否使用空的图像。&lt;/li&gt;
&lt;li&gt;由于中间格式仅仅有box的标签而并不包含类别名，当使用&lt;code&gt;CustomDataset&lt;/code&gt;时，使用者不能通过配置来过滤空的GT图像，而只能进行脱机工作才能实现。&lt;/li&gt;
&lt;li&gt;当确定数据集中的&lt;code&gt;classes&lt;/code&gt;时，要记住去修改头文件中的&lt;code&gt;num_classes&lt;/code&gt;，在v2.9.0版本之后，我们添加了&lt;a href=&#34;https://github.com/open-mmlab/mmdetection/blob/master/mmdet/datasets/utils.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumClassCheckHook&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;去检查数字是否连续。&lt;/li&gt;
&lt;li&gt;设置类别及过滤方式会在未来对使用者更加友好。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
