<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 自定义自动化优化器</title>
    <link>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/</link>
    <description>Recent content in 自定义自动化优化器 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 1.定义一个新的优化器</title>
      <link>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/define/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/define/</guid>
      <description>
        
        
        &lt;p&gt;一个自定义优化器可以通过如下方法定义：
假设你想添加一个名为&lt;code&gt;MyOptimizer&lt;/code&gt;，且含有参数&lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;和&lt;code&gt;c&lt;/code&gt;的优化器。
你需要创建一个名为&lt;code&gt;mmdet/core/optimizer&lt;/code&gt;的新的路径。
然后在文件中实现这个新的优化器，比如在&lt;code&gt;mmdet/core/optimizer/my_optimizer.py&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.registry&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; OPTIMIZERS
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;torch.optim&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; Optimizer


&lt;span style=&#34;color:#99f&#34;&gt;@OPTIMIZERS.register_module&lt;/span&gt;()
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;MyOptimizer&lt;/span&gt;(Optimizer):

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, a, b, c)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 2.将优化器加入注册表</title>
      <link>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/import/</guid>
      <description>
        
        
        &lt;p&gt;To find the above module defined above, this module should be imported into the main namespace at first. There are two options to achieve it.
为了找到之前定义的模块，这个模块首先应当被导入到主要的命名空间，有两种方法可以实现它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改mmdet/core/optimizer/&lt;strong&gt;init&lt;/strong&gt;.py`来导入模块。&lt;/p&gt;
&lt;p&gt;新定义的模块应当被导入到 &lt;code&gt;mmdet/core/optimizer/__init__.py&lt;/code&gt; 使得注册表可以找到新模块并进行添加：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;.my_optimizer&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; MyOptimizer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在配置文件中使用 &lt;code&gt;custom_imports&lt;/code&gt;来人工导入。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;custom_imports &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mmdet.core.optimizer.my_optimizer&amp;#39;&lt;/span&gt;], allow_failed_imports&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;False)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;模块 &lt;code&gt;mmdet.core.optimizer.my_optimizer&lt;/code&gt; 会在项目的最开始被导入，然后 &lt;code&gt;MyOptimizer&lt;/code&gt; 这个类会自动注册。
注意只有包含 &lt;code&gt;MyOptimizer&lt;/code&gt; 这个类的包会被导入，&lt;code&gt;mmdet.core.optimizer.my_optimizer.MyOptimizer&lt;/code&gt;不能被直接导入。
事实上，使用者完全可以使用一个不同的文件路径结构来使用这种方法，只要模块的根目录在&lt;code&gt;PYTHONPATH&lt;/code&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 3.在配置文件中指明优化器</title>
      <link>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/specify_optimizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/languages/java/optimizer_setting/self_implemented/specify_optimizer/</guid>
      <description>
        
        
        &lt;p&gt;在进行玩上述步骤之后，你便可以在你的配置文件中的&lt;code&gt;optimizer&lt;/code&gt;字段使用&lt;code&gt;MyOptimizer&lt;/code&gt;。
在配置文件中，&lt;code&gt;optimizer&lt;/code&gt;字段的优化器通过下面方式进行定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;optimizer &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;SGD&amp;#39;&lt;/span&gt;, lr&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.02&lt;/span&gt;, momentum&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.9&lt;/span&gt;, weight_decay&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;0.0001&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要使用你自己的优化器，把这个字段改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;optimizer &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(&lt;span style=&#34;color:#366&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;MyOptimizer&amp;#39;&lt;/span&gt;, a&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;a_value, b&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;b_value, c&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;c_value)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
