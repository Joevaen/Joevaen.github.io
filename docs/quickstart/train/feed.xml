<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – 用自定义数据集训练</title>
    <link>https://Joevaen.github.io/docs/quickstart/train/</link>
    <description>Recent content in 用自定义数据集训练 on gRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://Joevaen.github.io/docs/quickstart/train/feed.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 准备自定义数据集</title>
      <link>https://Joevaen.github.io/docs/quickstart/train/prepare_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/quickstart/train/prepare_data/</guid>
      <description>
        
        
        &lt;p&gt;There are three ways to support a new dataset in MMDetection:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;reorganize the dataset into COCO format.&lt;/li&gt;
&lt;li&gt;reorganize the dataset into a middle format.&lt;/li&gt;
&lt;li&gt;implement a new dataset.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Usually we recommend to use the first two methods which are usually easier than the third.&lt;/p&gt;
&lt;p&gt;In this note, we give an example for converting the data into COCO format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: MMDetection only supports evaluating mask AP of dataset in COCO format for now.
So for instance segmentation task users should convert the data into coco format.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 准备config</title>
      <link>https://Joevaen.github.io/docs/quickstart/train/test_on_standard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/quickstart/train/test_on_standard/</guid>
      <description>
        
        
        &lt;p&gt;The second step is to prepare a config thus the dataset could be successfully loaded. Assume that we want to use Mask R-CNN with FPN, the config to train the detector on balloon dataset is as below. Assume the config is under directory &lt;code&gt;configs/balloon/&lt;/code&gt; and named as &lt;code&gt;mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py&lt;/code&gt;, the config is as below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# The new config inherits a base config to highlight the necessary modification&lt;/span&gt;
_base_ &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mask_rcnn/mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_coco.py&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# We also need to change the num_classes in head to match the dataset&amp;#39;s annotation&lt;/span&gt;
model &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    roi_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        bbox_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;),
        mask_head&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(num_classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;)))

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# Modify dataset related settings&lt;/span&gt;
dataset_type &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;COCODataset&amp;#39;&lt;/span&gt;
classes &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon&amp;#39;&lt;/span&gt;,)
data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
    train&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/train/&amp;#39;&lt;/span&gt;,
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/train/annotation_coco.json&amp;#39;&lt;/span&gt;),
    val&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/val/&amp;#39;&lt;/span&gt;,
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/val/annotation_coco.json&amp;#39;&lt;/span&gt;),
    test&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;dict&lt;/span&gt;(
        img_prefix&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/val/&amp;#39;&lt;/span&gt;,
        classes&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;classes,
        ann_file&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;balloon/val/annotation_coco.json&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# We can use the pre-trained Mask RCNN model to obtain higher performance&lt;/span&gt;
load_from &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;checkpoints/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 训练一个新的模型</title>
      <link>https://Joevaen.github.io/docs/quickstart/train/train/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/quickstart/train/train/</guid>
      <description>
        
        
        &lt;p&gt;To train a model with the new config, you can simply run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;python tools/train.py configs/balloon/mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more detailed usages, please refer to the &lt;a href=&#34;1_exist_data_model.md&#34;&gt;Case 1&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 测试和推理</title>
      <link>https://Joevaen.github.io/docs/quickstart/train/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Joevaen.github.io/docs/quickstart/train/test/</guid>
      <description>
        
        
        &lt;p&gt;To test the trained model, you can simply run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;python tools/test.py configs/balloon/mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py work_dirs/mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py/latest.pth --eval bbox segm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more detailed usages, please refer to the &lt;a href=&#34;1_exist_data_model.md&#34;&gt;Case 1&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
